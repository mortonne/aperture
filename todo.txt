== Project Management ==

 * SVN or GIT for future development?

 * make documentation public-viewable

 * system for reporting bugs/requesting features

 * more specialized tutorials, e.g. artifact removal, binning.

 * version management - procedures for testing new releases, when to
   create a new version branch, where/how to publish new versions for
   public use, etc.

 * make clearer separation between core and EEG functions

== General Issues ==

 * improve consistency:

  * naming conventions - getobj vs. get_mat

  * input - getobjallsubj takes "path" while getobj takes varargin

  * parameter names - chanFilter vs. chanbins vs. eog_channels

  * remove "basic" directory, move all "obj" functions to a "core" directory

  * expand unit tests; pattern modification operations especially
    important

  * should objects be saved with their mats, for ease of reloading them
    if the references in exp get lost?  Or even the whole branch
    (exp.subj.pat), so they can be remerged using merge_exps.

 * check feasibility of cross-experiment analyses (e.g. running Per's
   SME-serial position interaction analysis on all LTP FR experiments)

  * possibility: expand merge_exps.m, add 'experiment' field to each
    subj (or session) - could also add functions for running analyses at
    the session level

== Basic ==

 * make an init_subj function; currently get_sessdirs is the only
 programmatic way to make a subj structure

 * remove init_scalp and init_iEEG, expand import_channels

== Events ==

 * generalized scripts for events -> data -> events (import/export from
   beh_toolbox)

== Patclass ==

 * integrate load_pattern features into get_mat, replace load_pattern
 with get_mat in all toolbox functions

 * expand feature selection capability

== Patterns ==

* fix bin_pattern time dimension irregularity (final sample MSvals and avg fields)

 * change patBins to call apply_event_bins

 * full support for ':' and 'iter' options in patBins

 * import advances in EOG artifact detection (individual grid
   searches, Gratton et al. method)

 * support for continuous patterns - one event, many time bins?  How is
   events information stored?

 * generalize dimension objects, give option for any dimension to be
   saved to disk to free up memory (need to expand use of get_dim)

 * move to using EEGLAB-style chan structs

 * change "MSvals" and "vals" fields to "range". Then the only
   difference between time and freq dimensions will be the default
   labels

 * also change "avg" field to "center"

== Plotting ==

 * option to use locations from the chan struct, rather than from
   file. Would allow topo plots with a subset of channels

 * support for making brain plots

== Stats ==

 * should there be a monolithic function with many params/possible
 outputs, or a function for each type of stat test?

  * multiple functions, with standard stat variables - easier to
    understand, write new stats

 * what is the proper format for stat results?  What about n-way tests,
   interactions?

  * can make one stat object for each effect; each stat object has
    overall stats of test, but standard vars (p, statistic, thresh, h)
    are for the effect only.

  * this moves effects labels to a string identifier, rather than an
    easy-to-confuse index identifier

  * ANOVA function has job of generating default labels

 * proposal for compatibility with plotting functions

  * move multiple comparisons correction, ect. to functions that operates on
    stat objects

  * standard variable names: p, statistic, thresh, h

  * can we have some sort of setter function for standard stat
    variables, or just rely on help pages to instruct user on creating a
    compatible stat object?

  * thresh may be scalar or matrix (allows for levels of multiple
    comparisons correction within pattern)

  * 1) plot pattern 2) plot pattern with markers 3) plot statistic 4)
    plot thresholded statistic

  * color map is simply statistic, with values below thresh in white

  * translating p to z, setting z* can be done outside of plotting
    function

 * settle "stat" vs. "stats" controversy

 * support for stat printing in exp_disp

 * bootstrapping/summed z

 * RMAOV; expand to N-way, support importing back into MATLAB

 * permutation test on subject significance

 * cluster statistic; integrate ZDC's functions
