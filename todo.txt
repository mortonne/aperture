== Project Management ==
 * SVN or GIT?
 * README needs an update!  Change to give basic installation instructions, point to online documenation
 * make documentation public-viewable
 * system for reporting bugs/requesting features
 * more specialized tutorials, e.g. artifact removal, binning.
 * version management - procedures for testing new releases, when to create a new version branch, where/how to publish new versions for public use, etc.
 * make clearer separation between core and EEG functions
 * compatibility with EEGLAB and fieldtrip
  * For right now, throwing in useful functions to whatever folder seems to fit. Should there be a top-level fork between eeg_ana and other toolbox functions to facilitate updates?  How do other software projects handle this?

== General Issues ==
 * improve consistency:
  * naming conventions - getobj vs. get_mat
  * input - getobjallsubj takes "path" while getobj takes varargin
  * parameter names - chanFilter vs. chanbins vs. eog_channels
  * remove "basic" directory, move all "obj" functions to one directory
  * unit tests?
  * should objects be saved with their mats, for ease of reloading them if the references in exp get lost?  Or even the whole branch (exp.subj.pat), so they can be remerged using merge_exps.
 * should we switch over to using propval instead of structDefaults?  Allows use of either struct or property-value pairs.  Prop-val pairs may not be suitable for some functions, but it still wouldn't hurt to use propval.  Also, should there be checks for unused params?  Might help prevent beginning users from making errors.
 * check feasibility of cross-experiment analyses (e.g. running Per's SME-serial position interaction analysis on all LTP FR experiments)
  * possibility: expand merge_exps.m, add 'experiment' field to each subj (or session) - could also add functions for running analyses at the session level

== Basic ==
 * make an init_subj function; currently get_sessdirs is the only programmatic way to make a subj structure
 * remove init_scalp and init_iEEG, add scripts for adding channel information to existing subjects

== Events ==
 * generalized scripts for events -> data -> events (import/export from beh_toolbox)

== Patclass ==
 * integrate load_pattern features into get_mat, replace load_pattern with get_mat in all toolbox functions
 * refine and test patclass_dev features
 * more classifiers, general section to give access to all MVPA functions
 * ANOVA feature selection - see if there is anything we can take from MVPA

== Patterns ==
 * re-evaluate pattern creation; are there ways to simplify the process?
 * import advances in EOG artifact detection (individual grid searches)
 * fix updating of params in modify_pattern; currently replaces some params with their defaults in modify_pattern
 * support for continuous patterns - one event, many time bins?  How is events information stored?
 * generalize dimension objects, give option for any dimension to be saved to disk to free up memory

== Plotting ==
 * fix calling signature of pat_* plotting functions.  The user shouldn't have to worry about create_fig.  Switching the signature may be tricky, since there is no way to ensure backwards compatibility.
 * consider beefing up plot_events.  it's unique and potentially very useful.
 * support for making brain plots

== Stats ==
 * re-evaluate design of statistics function.
  * compatability with apply_by_slice?
  * monolithic function with many params/possible outputs, or a function for each type of stat test?
  * what is the proper format for stat results?  What about n-way tests, interactions?  One object, or one for each effect?
  * fix sign test bug
 * support for stat printing in exp_disp
 * bootstrapping/summed z
 * RMAOV
 * permutation test on subject significance
 * cluster statistic

== Utils ==
